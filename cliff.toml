# git-cliff ~ configuration file
# https://git-cliff.org/docs/configuration

[remote.github]
owner = "quotidian-ennui"
repo = "tesla-powerwall-exporter"

[changelog]
# changelog header
header = """
# Changelog

> If you're not making a mistake, you're making a mistake - Miles Davis

It's a docker image so [github package registry](https://github.com/quotidian-ennui/tesla-powerwall-exporter/pkgs/container/tesla-powerwall-exporter) is where the interesting stuff is

"""
# template for the changelog body
# https://tera.netlify.app/docs/#introduction
body = """
{% if version %}\
    ## [{{ version | trim_start_matches(pat="v") }}] - {{ timestamp | date(format="%Y-%m-%d") }}
{% else %}\
    ## [unreleased]
{% endif %}\
{% for group, commits in commits | group_by(attribute="group") %}
    ### {{ group | striptags | trim | upper_first }}
    {% for commit in commits %}
        - {% if commit.breaking %}💥(**BREAKING**) {% endif %}{% if commit.scope %}({{ commit.scope }}) {% endif %}{{ commit.message | upper_first | trim}} by {{commit.author.name}}\
    {% endfor %}
{% endfor %}\n
"""
# remove the leading and trailing whitespace from the template
trim = true
# changelog footer
footer = """
"""

postprocessors = [
    { pattern = 'dependabot\[.*\]', replace="@dependabot"},
    { pattern = 'Damian Myerscough', replace="@dmyerscough" },
    { pattern = 'qe-repo-updater\[.*\]', replace="[qe-repo-updater](https://github.com/apps/qe-repo-updater)"},
    { pattern = 'Lewin Chan', replace="@quotidian-ennui"},
]

[git]
# parse the commits based on https://www.conventionalcommits.org
conventional_commits = true
# filter out the commits that are not conventional
filter_unconventional = false
# process each line of a commit as an individual commit
split_commits = false
# regex for preprocessing the commit messages
commit_preprocessors = [
    # remove issue numbers from commits for running in remote mode
    # { pattern = '\((\w+\s)?#([0-9]+)\)', replace = "" },
    # If not in github remote mode, we add in links to the issues manually.
    { pattern = '\((\w+\s)?#([0-9]+)\)', replace = "([#${2}](https://github.com/quotidian-ennui/tesla-powerwall-exporter/issues/${2}))"},
    { pattern = '^Bump (.*)', replace = "deps: Bump $1"},
    { pattern = '^deps: bump quarkus to (.*)', replace="deps(java): Bump quarkus to $1"},
    { pattern = '^updatecli: (.*)', replace = "deps(updatecli): $1"},
]

# regex for parsing and grouping commits
commit_parsers = [
    { message = "^feat\\(tf\\)", group = "<!-- 09 -->🏭 Terraform"},
    { message = "^feat\\(ci|build\\)", group = "<!-- 07 -->👷 Build Environment"},
    { message = "^feat", group = "<!-- 01 -->✨ Features"},
    { message = "^fixup!", skip = true},
    { message = "^fix\\(ci|build\\)", group = "<!-- 07 -->👷 Build Environment"},
    { message = "^fix", group = "<!-- 02 -->🐛 Bug Fixes"},
    { message = "^doc", group = "<!-- 03 -->📝 Documentation"},
    { message = "^perf", group = "<!-- 04 -->⚡ Performance"},
    { message = "^refactor\\(tf\\)", group = "<!-- 09 -->🏭 Terraform"},
    { message = "^refactor\\(ci|build\\)", group = "<!-- 07 -->👷 Build Environment"},
    { message = "^refactor", group = "<!-- 05 -->♻️ Refactoring"},
    { message = "^lint", group = "<!-- 05 -->♻️ Refactoring"},
    { message = "^test", group = "<!-- 06 -->🧪 Testing"},
    { message = "^build\\(deps.*\\)", group = "<!-- 99 -->📌 Dependency Management"},
    { message = "^build\\(dev-deps.*\\)", group = "<!-- 99 -->📌 Dependency Management"},
    { message = "^(ci|build)", group = "<!-- 07 -->👷 Build Environment"},
    { message = "^deps\\(ci|build\\)", group = "<!-- 07 -->👷 Build Environment"},
    { message = "^deps", group = "<!-- 99 -->📌 Dependency Management"},
    { message = "^chore\\(deps\\)", group = "<!-- 99 -->📌 Dependency Management"},
    { message = "^chore\\(release\\):", skip = true},
    { message = "^release:", skip = true},
    { message = "^Merge branch '", skip = true},
    { message = "^Initial commit", skip = true},
    { message = "^chore", group = "<!-- 10 -->🧹 Miscellaneous Tasks"},
    { body = ".*security", group = "<!-- 00 -->🛡️ Security"},
    { message = ".*", group = "<!--80-->🤷 Uncategorised" },
]
# filter out the commits that are not matched by commit parsers
filter_commits = false
# glob pattern for matching git tags
tag_pattern = "[0-9].*"
# regex for skipping tags
skip_tags = "beta|alpha"
# regex for ignoring tags
ignore_tags = "rc"
topo_order = false
# sort the tags chronologically
date_order = false
# sort the commits inside sections by oldest/newest order
sort_commits = "newest"
protect_breaking_commits = true
