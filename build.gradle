plugins {
  id 'java'
  id 'io.quarkus'
  id 'jacoco'
  id 'io.freefair.lombok' version '8.14'
  id 'com.github.jmongard.git-semver-plugin' version '0.16.1'
  id 'org.barfuin.gradle.jacocolog' version '3.1.0'
  id "com.diffplug.spotless" version "7.2.0"

}

ext {
  disableSpotlessJava=project.findProperty('disableSpotlessJava') ?: 'true'
}

repositories {
  mavenCentral()
  mavenLocal()
}

semver {
  // see https://github.com/jmongard/Git.SemVersioning.Gradle
  patchPattern = "\\A(chore|fix|refactor|deps)(?:\\([^()]+\\))?:"
  groupVersionIncrements = true
  noDirtyCheck = true
  gitDirectory = project.projectDir
  createReleaseCommit = false
  createReleaseTag = false
}

dependencies {
  implementation enforcedPlatform("${quarkusPlatformGroupId}:${quarkusPlatformArtifactId}:${quarkusPlatformVersion}")
  implementation "io.quarkus:quarkus-scheduler"
  implementation "io.quarkus:quarkus-micrometer-registry-prometheus"
  implementation "io.quarkus:quarkus-arc"
  implementation "io.quarkus:quarkus-jackson"
  implementation "io.quarkus:quarkus-rest-client-jackson"
  implementation "io.quarkus:quarkus-smallrye-stork"
  implementation "io.smallrye.stork:stork-service-discovery-static-list"
  implementation "io.smallrye.stork:stork-load-balancer-sticky"
  implementation "org.apache.commons:commons-text"
  implementation "org.apache.commons:commons-lang3"
  testImplementation "io.quarkus:quarkus-junit5"
  testImplementation "org.wiremock:wiremock:3.13.1"
  testImplementation "io.quarkus:quarkus-jacoco"
}

group "io.github.quotidianennui"
version semver.version

lombok {
  disableConfig = true
}

java {
  sourceCompatibility = JavaVersion.VERSION_21
  targetCompatibility = JavaVersion.VERSION_21
}

test {
  systemProperty "java.util.logging.manager", "org.jboss.logmanager.LogManager"
  // quarkus.jacoco.report=false in app.properties
  // since we want jacocolog to emit its data
  finalizedBy jacocoTestReport
  jacoco {
    // Force it into the same location as quarkus.
    destinationFile = layout.buildDirectory.file("jacoco-quarkus.exec").get().asFile
    excludeClassLoaders = ["*QuarkusClassLoader"]
  }
}

jacocoTestReport {
  reports {
    xml.required = true
    html.required = true
  }
}

compileJava {
  options.encoding = "UTF-8"
  options.compilerArgs << "-parameters"
}

compileTestJava {
  options.encoding = "UTF-8"
}

spotless {
  if (disableSpotlessJava!="true" ) {
    java {
      // Only spotlessCheck files that have changed in this branch, based on a diff
      // from origin/main...
      // Eventually becomes consistent.
      ratchetFrom "origin/main"
      // Allow // spotless:off // spotless:on
      toggleOffOn()
      // this conflicts with the standard behaviour of vscode-plugin + intellij
      // so use gjf in default mode only which is a pure alphabetical import order.
      // googleJavaFormat().reorderImports(false)
      googleJavaFormat()
      removeUnusedImports()
      // Only useful if you turn off reorderImports() above.
      // importOrder('\\#', 'java|javax|jakarta', '', 'lombok')

      // fix formatting of type annotations
      // formatAnnotations()
    }
  }
}
